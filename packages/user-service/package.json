{
  "name": "@samagra-x/user-service",
  "version": "0.0.1",
  "description": "APIs for user management in samagra microservices.",
  "author": "Team SamagraX (https://github.com/Samagra-Development)",
  "private": false,
  "license": "MIT",
  "main": "./dist/index.js",
  "typings": "./dist/index.d.ts",
  "files": [
    "dist"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/samagra-development/user-service.git"
  },
  "homepage": "https://github.com/SamagraX-stencil/stencil",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "tsc --project tsconfig.build.json",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "npm run start:node", 
    "start:bun": "bun start",
    "start:node": "nest start", 
    "start:dev": "npm run start:node:dev", 
    "start:bun:dev": "bun start --watch",
    "start:node:dev": "nest start --watch", 
    "start:debug": "npm run start:node:debug",
    "start:bun:debug": "bun start --debug --watch",
    "start:node:debug": "nest start --debug --watch", 
    "start:prod": "npm run start:node:prod", 
    "start:bun:prod": "node dist/main",
    "start:node:prod": "node dist/main",
    "prisma:generate": "npx prisma generate",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest --runInBand",
    "test:watch": "jest --watch --runInBand",
    "test:watch-cov": "jest --watch --coverage --runInBand",
    "test:cov": "jest --coverage --runInBand",
    "test:dev": "jest --watch --coverage --runInBand",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "prepare": "cd ../.. && husky install packages/user-service/.husky"
  },
  "dependencies": {
    "@fusionauth/typescript-client": "^1.43.0",
    "@golevelup/ts-jest": "^0.3.5",
    "@nestjs/axios": "^0.0.7",
    "@nestjs/common": "^8.*",
    "@nestjs/config": "^1.0.1",
    "@nestjs/core": "^8.0.0",
    "@nestjs/jwt": "^10.0.1",
    "@nestjs/passport": "^8.2.1",
    "@nestjs/platform-express": "^8.4.7",
    "@nestjs/swagger": "^5.0.9",
    "@nestjs/terminus": "9.2.1",
    "@nestjs/throttler": "^2.0.1",
    "@prisma/client": "2.28.0",
    "@sentry/minimal": "^6.19.7",
    "@sentry/node": "^7.57.0",
    "ajv": "^8.12.0",
    "bun": "^1.0.30",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "crypto-js": "^4.1.1",
    "flagsmith-nodejs": "^2.5.2",
    "got": "^11.8.2",
    "helmet": "^7.0.0",
    "passport": "^0.5.2",
    "passport-http": "^0.3.0",
    "passport-jwt": "^4.0.1",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.8.0",
    "speakeasy": "^2.0.0",
    "swagger-ui-express": "^4.1.6",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@nestjs/cli": "^8.0.0",
    "@nestjs/schematics": "^8.0.0",
    "@nestjs/testing": "^8.0.0",
    "@types/express": "^4.17.13",
    "@types/jest": "^26.0.24",
    "@types/node": "^16.0.0",
    "@types/passport": "^1.0.7",
    "@types/passport-http": "^0.3.9",
    "@types/passport-jwt": "^3.0.6",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^4.28.2",
    "@typescript-eslint/parser": "^4.28.2",
    "cz-conventional-changelog": "3.3.0",
    "eslint": "^7.30.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^3.4.0",
    "husky": "7",
    "jest": "27.0.6",
    "prettier": "^2.3.2",
    "prisma": "2.28.0",
    "prismix": "^1.0.16",
    "supertest": "^6.1.3",
    "ts-jest": "^27.0.3",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "^3.10.1",
    "typescript": "^4.3.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "coverageReporters": [
      "json-summary",
      "text",
      "lcov"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog",
      "maxHeaderWidth": 100,
      "maxLineWidth": 100
    }
  },
  "husky": {
    "hooks": {
      "prepare-commit-msg": "exec < /dev/tty && git cz --hook || true"
    }
  }
}
